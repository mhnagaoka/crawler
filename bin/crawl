#!/usr/bin/env node
'use strict'

process.on('unhandledRejection', (error) => {
  console.error(error.stack)
  process.exit(1)
})

const meow = require('meow')
const { MongoClient } = require('mongodb')
const { createCrawler } = require('../src/crawler')
const createPageVisitor = require('../src/page-visitor')

const cli = meow(
  `
	Usage
	  $ crawl <url>

  Options
    --help            show usage information
    --version         prints the version number
	  --maxVisits, -mv  maximum number of pages to crawl (default is 10)

	Examples
	  $ crawl https://www.crawler-test.com/
	  $ crawl --maxVisits 10 https://www.crawler-test.com/
`,
  {
    flags: {
      maxVisits: {
        type: 'number',
        alias: 'mv',
        default: 10,
      },
    },
  }
)

if (cli.input.length < 1) {
  cli.showHelp()
}

async function main() {
  let mongodbClient = null
  try {
    const mongodbUrl = process.env.MONGODB_URL
    mongodbClient = await MongoClient.connect(mongodbUrl, {
      poolSize: 1,
      useUnifiedTopology: true,
    })

    await Promise.all(
      cli.input.map((initialUrl) => {
        const maxVisits = cli.flags.maxVisits
        const visitorFn = createPageVisitor(mongodbClient)
        const crawler = createCrawler({ maxVisits, visitorFn })
        return crawler.crawl(initialUrl)
      })
    )
  } finally {
    if (mongodbClient) {
      await mongodbClient.close()
    }
  }
}

main()
